apiVersion: v1
kind: Secret
metadata:
  name: otel-collector-secret
type: Opaque
stringData:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      hostmetrics:
        scrapers:
          load:
          memory:

    processors:
      batch:
      resourcedetection:
        detectors: ["env", "system"]
        override: false
      transform/drop_unneeded_resource_attributes:
        error_mode: ignore
        trace_statements:
          - context: resource
            statements:
              - delete_key(attributes, "k8s.pod.start_time")
              - delete_key(attributes, "os.description")
              - delete_key(attributes, "os.type")
              - delete_key(attributes, "process.command_args")
              - delete_key(attributes, "process.executable.path")
              - delete_key(attributes, "process.pid")
              - delete_key(attributes, "process.runtime.description")
              - delete_key(attributes, "process.runtime.name")
              - delete_key(attributes, "process.runtime.version")
        metric_statements:
          - context: resource
            statements:
              - delete_key(attributes, "k8s.pod.start_time")
              - delete_key(attributes, "os.description")
              - delete_key(attributes, "os.type")
              - delete_key(attributes, "process.command_args")
              - delete_key(attributes, "process.executable.path")
              - delete_key(attributes, "process.pid")
              - delete_key(attributes, "process.runtime.description")
              - delete_key(attributes, "process.runtime.name")
              - delete_key(attributes, "process.runtime.version")
        log_statements:
          - context: resource
            statements:
              - delete_key(attributes, "k8s.pod.start_time")
              - delete_key(attributes, "os.description")
              - delete_key(attributes, "os.type")
              - delete_key(attributes, "process.command_args")
              - delete_key(attributes, "process.executable.path")
              - delete_key(attributes, "process.pid")
              - delete_key(attributes, "process.runtime.description")
              - delete_key(attributes, "process.runtime.name")
              - delete_key(attributes, "process.runtime.version")
      transform/add_resource_attributes_as_metric_attributes:
        error_mode: ignore
        metric_statements:
          - context: datapoint
            statements:
              - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
              - set(attributes["service.version"], resource.attributes["service.version"])

      k8sattributes:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.uid
            - k8s.pod.start_time
        pod_association:
          - sources:
              - from: connection

    exporters:
      otlphttp/grafana_cloud:
        endpoint: {{ .Values.grafanacloud.otlpendpoint }}
        auth:
          authenticator: basicauth/grafana_cloud

    extensions:
      basicauth/grafana_cloud:
        client_auth:
          username: {{ .Values.grafanacloud.username | quote}}
          password: {{ .Values.grafanacloud.password }}

    connectors:
      grafanacloud:
        host_identifiers: ["k8s.node.name"]

    service:
      extensions: [basicauth/grafana_cloud]
      pipelines:
        traces:
          receivers: [otlp]
          processors:
            [
              resourcedetection,
              k8sattributes,
              transform/drop_unneeded_resource_attributes,
              batch,
            ]
          exporters: [otlphttp/grafana_cloud, grafanacloud]
        metrics:
          receivers: [otlp, hostmetrics]
          processors:
            [
              resourcedetection,
              k8sattributes,
              transform/drop_unneeded_resource_attributes,
              transform/add_resource_attributes_as_metric_attributes,
              batch,
            ]
          exporters: [otlphttp/grafana_cloud]
        metrics/grafanacloud:
          receivers: [grafanacloud]
          processors: [batch]
          exporters: [otlphttp/grafana_cloud]
        logs:
          receivers: [otlp]
          processors:
            [
              resourcedetection,
              k8sattributes,
              transform/drop_unneeded_resource_attributes,
              batch,
            ]
          exporters: [otlphttp/grafana_cloud]
